[{"path":"https://edm-developers.github.io/fastEDM/articles/chicago.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Chicago crime/temperature example","text":"demonstrate usefulness EDM estimating impact causal variables, use real-world dataset reflects daily temperature crime levels Chicago, make available chicago.csv file. First, load time series R: Plotting two time series shows:  plotted scatter plot, appears linear correlation variables:  Calculating linear correlation Crime Temperature: shows mild correlation, however causal structure () direction shown.","code":"chicagoURL <- url(\"https://github.com/EDM-Developers/fastEDM/raw/master/vignettes/chicago.csv\") chicago <- read.csv(chicagoURL) head(chicago) #>   Time Temperature Crime #> 1    1       24.08  1605 #> 2    2       19.04  1119 #> 3    3       28.04  1127 #> 4    4       30.02  1154 #> 5    5       35.96  1251 #> 6    6       33.08  1276 library(ggplot2) #> Warning in register(): Can't find generic `scale_type` in package ggplot2 to #> register S3 method.  df <- data.frame(list(   t = rep(chicago$Time, 2),   variable = c(rep(\"Crime\", nrow(chicago)), rep(\"Temperature\", nrow(chicago))),   value = c(chicago$Crime, chicago$Temperature)))  ggplot(df, aes(x = t)) +    geom_line(aes(y = value, color = variable)) +   labs(colour = \"Time series\") ggplot(chicago, aes(x = Temperature, y=Crime)) + geom_point(color=\"#F8766D\") cor(chicago[\"Temperature\"], chicago[\"Crime\"]) #>                Crime #> Temperature 0.461996"},{"path":"https://edm-developers.github.io/fastEDM/articles/chicago.html","id":"find-the-optimal-embedding-dimension","dir":"Articles","previous_headings":"","what":"Find the optimal embedding dimension","title":"Chicago crime/temperature example","text":"Now use edm find optimal embedding dimension Temperature time series. check values \\(E = 2, \\dots 20\\). crossfold=5 option means , \\(E\\) value run 5 sets predictions, set take four fifths data training predict remaining one fifth. rho column can see prediction accuracy maximised \\(E = 7\\), take estimate embedding dimension.","code":"# Just to speed up the example chicago <- head(chicago, 500) # TODO: Remove this later. library(fastEDM) edm(chicago[\"Time\"], chicago[\"Temperature\"], E=2:10, numThreads=4) #>  Computing: [========================================] 100% (done) #> $rc #> [1] 0 #>  #> $summary #>    E library theta       rho      mae #> 1  2     245     1 0.7385233 8.673756 #> 2  3     245     1 0.7928449 7.514527 #> 3  4     245     1 0.7797324 7.739515 #> 4  5     245     1 0.7961086 7.283689 #> 5  6     245     1 0.7844071 7.603536 #> 6  7     245     1 0.7537404 8.143099 #> 7  8     245     1 0.7486604 8.184175 #> 8  9     245     1 0.7428753 8.367839 #> 9 10     245     1 0.7397052 8.398060 #>  #> $kMin #> [1] 3 #>  #> $kMax #> [1] 11"},{"path":"https://edm-developers.github.io/fastEDM/articles/chicago.html","id":"convergent-cross-mapping","dir":"Articles","previous_headings":"","what":"Convergent cross-mapping","title":"Chicago crime/temperature example","text":"edm command can also run cross-mapping task, allows us ascertain causal links crime temperature time series. !!! note selects lot library points, replicates analysis times, command may take minute two finish. Choosing machine CPU cores faster cores help significantly. Plotting results gives:  plot, can see one direction shows significant increase accuracy \\(L\\) increases, whereas direction pretty flat. direction increases \\(\\texttt{Temperature} \\mid M(\\texttt{Crime})\\) direction. notation means used \\(\\texttt{Crime}\\) predict \\(\\texttt{Temperature}\\), due backward nature EDM means refers causal link \\(\\texttt{Temperature} \\M(\\texttt{Crime})\\). Therefore, â€™d conclude causal link temperature crime, though link reverse direction (implausible).","code":"# libs <- c(seq(10, 200, 5), seq(210, 1000, 10), seq(1020, 2000, 20), #           seq(2050, 4350, 50), 4365)  libs <- seq(10, 4300, 100)  tempPredictsCrime <- edm(chicago[\"Time\"], chicago[\"Temperature\"], chicago[\"Crime\"],                          algorithm=\"smap\", E=7, library=libs, numReps=4, numThreads=4) #>  Computing: [=========================               ] 62%  (~0s remaining)        Computing: [========================================] 100% (done)  crimePredictsTemp <- edm(chicago[\"Time\"], chicago[\"Crime\"], chicago[\"Temperature\"],                          algorithm=\"smap\", E=7, library=libs, numReps=4, numThreads=4) #>  Computing: [==========================              ] 63%  (~0s remaining)        Computing: [========================================] 100% (done) library(tidyr)  averaged1 <- stats::aggregate(rho ~ library, tempPredictsCrime$summary, mean) averaged2 <- stats::aggregate(rho ~ library, crimePredictsTemp$summary, mean)  averaged <- data.frame(Library = averaged1$library,                        temp.to.crime = averaged1$rho,                        crime.to.temp = averaged2$rho)  combined <- gather(averaged, key = \"Direction\", value = \"Correlation\", -Library) combined[combined$Direction == \"temp.to.crime\", \"Direction\"] <- \"Crime | M(Temperature)\" combined[combined$Direction == \"crime.to.temp\", \"Direction\"] <- \"Temperature | M(Crime)\"  ggplot(combined, aes(x = Library, y = Correlation)) +    geom_line(aes(color = Direction)) + scale_color_manual(values = c(\"darkred\", \"steelblue\")) +   geom_point(data = tempPredictsCrime$summary, aes(x = library, y = rho), alpha = 0.05, color = \"darkred\") +   geom_point(data = crimePredictsTemp$summary, aes(x = library, y = rho), alpha = 0.05, color = \"steelblue\") +   ylim(c(0.275, 0.625)) #> Warning: Removed 85 row(s) containing missing values (geom_path). #> geom_path: Each group consists of only one observation. Do you need to adjust #> the group aesthetic? #> Warning: Removed 172 rows containing missing values (geom_point). #> Warning: Removed 165 rows containing missing values (geom_point)."},{"path":"https://edm-developers.github.io/fastEDM/articles/chicago.html","id":"inspecting-the-s-map-coefficients","dir":"Articles","previous_headings":"","what":"Inspecting the S-map coefficients","title":"Chicago crime/temperature example","text":"run edm saveSMAPCoeffs=TRUE option, can store fitted S-map coefficients variable start prefix beta. Plotting allows us see contemporaneous effect temperature crime.","code":"# Library size should be 4365 tempPredictsCrime <- edm(chicago[\"Time\"], chicago[\"Temperature\"], chicago[\"Crime\"],                          algorithm=\"smap\", E=7, k=Inf, saveSMAPCoeffs=TRUE,                           numThreads=4) #>  Computing: [========================================] 100% (done)  crimePredictsTemp <- edm(chicago[\"Time\"], chicago[\"Crime\"], chicago[\"Temperature\"],                          algorithm=\"smap\", E=7, k=Inf, saveSMAPCoeffs=TRUE,                          numThreads=4) #>  Computing: [========================================] 100% (done)  # . edm xmap temp crime, e(7) alg(smap) k(-1) savesmap(beta) # Percent complete: 0...10...20...30...40...50...60...70...80...90... # Percent complete: 0...10...20...30...40...50...60...70...80...90... #  # Empirical Dynamic Modelling # Convergent Cross-mapping result for variables temp and crime # -------------------------------------------------------------------------- #                  Mapping    Library size             rho             MAE # -------------------------------------------------------------------------- #    crime ~ crime|M(temp)            4365          .46784          136.93  #     temp ~ temp|M(crime)            4365          .54886          14.661  # -------------------------------------------------------------------------- # Note: Number of neighbours (k) is set to 4364 # Note: The embedding dimension E is 7 # . twoway (kdensity beta1_b1_rep1), xtitle(\"Contemporaneous effect of temperatur # > e on crime\") ytitle(\"Density\") # . twoway (scatter beta1_b1_rep1 temp, xtitle(\"Temperature (Fahrenheit)\") ytitle # > (\"Contemporaneous effect of temperature on crime\") msize(small))(lpoly beta1_ # > b1_rep1 temp), legend(on order( 1 \"Local coefficient\" 2 \"Local polynomial smo # > othing\"))"},{"path":"https://edm-developers.github.io/fastEDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick Laub. Author, maintainer. Jinjing Li. Author. Michael Zyphur. Author. Edoardo Tescari. Contributor. Simon Mutch. Contributor. George Sugihara. Originator.","code":""},{"path":"https://edm-developers.github.io/fastEDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Laub P, Li J, Zyphur M (2022). fastEDM: Empirical Dynamic Modeling Causal Analysis. R package version 0.1, https://edm-developers.github.io/fastEDM.","code":"@Manual{,   title = {fastEDM: Empirical Dynamic Modeling for Causal Analysis},   author = {Patrick Laub and Jinjing Li and Michael Zyphur},   year = {2022},   note = {R package version 0.1},   url = {https://edm-developers.github.io/fastEDM}, }"},{"path":"https://edm-developers.github.io/fastEDM/index.html","id":"fastedm-","dir":"","previous_headings":"","what":"Empirical Dynamic Modeling for Causal Analysis","title":"Empirical Dynamic Modeling for Causal Analysis","text":"fastEDM R package implements series Empirical Dynamic Modeling tools can used causal analysis time series data. Key features package: powered fast multi-threaded C++ backend, able process panel data, .k.. multispatial EDM, able handle missing data using new dt algorithms dropping points.","code":""},{"path":"https://edm-developers.github.io/fastEDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Empirical Dynamic Modeling for Causal Analysis","text":"can install development version fastEDM GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"EDM-Developers/fastEDM\")"},{"path":"https://edm-developers.github.io/fastEDM/index.html","id":"example-chicago-crime-levels-and-temperature","dir":"","previous_headings":"","what":"Example: Chicago crime levels and temperature","title":"Empirical Dynamic Modeling for Causal Analysis","text":"example, looking causal links Chicagoâ€™s temperature crime rates, described full paper:","code":"library(fastEDM) library(readr)  data <- url(\"https://raw.githubusercontent.com/EDM-Developers/EDM/master/test/chicago.csv\")  chicago <- read_csv(data, col_types = cols(crime = col_double())) chicago <- head(chicago, 500) # Just to speed up the example  crimeCCMCausesTemp <- easy_edm(\"crime\", \"temp\", data=chicago, verbosity=0) #> x No causal link from crime to temp found. tempCCMCausesCrime <- easy_edm(\"temp\", \"crime\", data=chicago, verbosity=0) #> v Strong evidence that temp causes crime."},{"path":"https://edm-developers.github.io/fastEDM/index.html","id":"stata-package","dir":"","previous_headings":"","what":"Stata Package","title":"Empirical Dynamic Modeling for Causal Analysis","text":"package R port EDM Stata package. packages share underlying C++ code, behaviour identical. plan adjust various low-level EDM parameters, check documentation Stata package details options behaviours.","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/easy_edm.html","id":null,"dir":"Reference","previous_headings":"","what":"easy_edm â€” easy_edm","title":"easy_edm â€” easy_edm","text":"easy_edm","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/easy_edm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"easy_edm â€” easy_edm","text":"","code":"easy_edm(   cause,   effect,   time = NULL,   data = NULL,   direction = \"oneway\",   verbosity = 1,   normalize = TRUE )"},{"path":"https://edm-developers.github.io/fastEDM/reference/easy_edm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"easy_edm â€” easy_edm","text":"cause first time series causal analysis effect second time series causal analysis time time uniformly sampled, must supplied . data dataframe supplied , cause, effect & time must strings containing column names relevant time series. direction string specifying whether checking one directional causal effect whether test reverse direction time. verbosity level detail output. normalize Whether normalize inputs starting EDM.","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/easy_edm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"easy_edm â€” easy_edm","text":"integer error/return code (success 0)","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/easy_edm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"easy_edm â€” easy_edm","text":"","code":"library(fastEDM)  library(readr)  data <- url(\"https://raw.githubusercontent.com/EDM-Developers/EDM/master/test/chicago.csv\")    chicago <- read_csv(data, col_types = cols(crime = col_double()))  chicago <- head(chicago, 500) # Just to speed up the example  easy_edm(\"crime\", \"temp\", data=chicago) #> â„¹ Pulling the time series from the supplied dataframe. #> â„¹ Number of observations is 500 #>  Computing: [========================================] 100% (done)                          #> âœ” Found optimal embedding dimension E to be 5. #>  Computing: [========================================] 100% (done)                          #> â„¹ The maximum library size we can use is 2475. #>  Computing: [========================================] 100% (done)                          #> â„¹ The CCM fit is (alpha, gamma, rhoInfinity) = (-0.55, 0.017, 0.61). #> âœ– No causal link from crime to temp found. #> [1] FALSE"},{"path":"https://edm-developers.github.io/fastEDM/reference/edm.html","id":null,"dir":"Reference","previous_headings":"","what":"edm â€” edm","title":"edm â€” edm","text":"edm","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/edm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"edm â€” edm","text":"","code":"edm(   t,   x,   y = c(),   panel = c(),   E = 2,   tau = 1,   theta = 1,   library = NULL,   k = 0,   algorithm = \"simplex\",   p = NULL,   crossfold = 0,   full = FALSE,   shuffle = FALSE,   copredict = c(),   savePredictions = FALSE,   saveCoPredictions = FALSE,   saveManifolds = FALSE,   saveSMAPCoeffs = FALSE,   extras = NULL,   allowMissing = FALSE,   missingDistance = 0,   dt = FALSE,   reldt = FALSE,   dtWeight = 0,   numReps = 1,   panelWeight = 0,   verbosity = 1,   numThreads = 1,   lowMemory = FALSE,   predictWithPast = FALSE,   saveInputs = \"\" )"},{"path":"https://edm-developers.github.io/fastEDM/reference/edm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"edm â€” edm","text":"t time variable x first variable causal analysis y second variable causal analysis panel data panel data, variable specifies panel ID observation. E option specifies number dimensions \\(E\\) used main variable manifold reconstruction. list numbers provided, command compute results numbers specified. xmap subcommand supports single integer option whereas explore subcommand supports option numlist. default value \\(E\\) 2, theory \\(E\\) can range 2 almost half total sample size. actual \\(E\\) used estimation may different additional variables incorporated. error message provided specified value range. Missing data limit maximum \\(E\\) default deletion method. tau tau (\\(\\tau\\)) option allows researchers specify â€˜time delayâ€™, essentially sorts data multiple \\(\\tau\\). done specifying lagged embeddings take form: \\(t,t-\\tau,â€¦,t-(E-1)\\tau\\), default tau=1 (.e., typical lags). However, tau=2 set every-\\(t\\) used reconstruct attractor make predictionsâ€”halve observed sample size odd even \\(t\\) used construct set embedding vectors analysis. option helpful data oversampled (.e., spaced closely time) therefore little new information dynamic system added occasion. However, tau setting also useful different dynamics occur different times scales, can chosen reflect researcherâ€™s theory-driven interest specific time-scale (e.g., daily instead hourly). Researchers can evaluate whether \\(\\tau > 1\\) required checking large autocorrelations observed data. course, linear measure association may work well nonlinear systems thus researchers can also check performance examining \\(\\rho\\) MAE different values \\(\\tau\\). theta Theta (\\(\\theta\\)) distance weighting parameter local neighbours manifold. used detect nonlinearity system explore subcommand S-mapping. course, noted , simplex projection CCM weight theta = 1 applied neighbours based distance, reflected fact default value \\(\\theta\\) 1. However, can altered even simplex projection CCM (two cases cover ). Particularly, values S-mapping test improved predictions become local may include theta = c(0, .00001, .0001, .001, .005, .01, .05, .1, .5, 1, 1.5, 2, 3, 4, 6, 8, 10). library option specifies total library size \\(L\\) used manifold reconstruction. Varying library size used estimate convergence property cross-mapping, minimum value \\(L_{min} = E + 2\\) maximum equal total number observations minus sufficient lags (e.g., time-series case without missing data \\(L_{max} = T + 1 - E)\\). error message given \\(L\\) value beyond allowed range. assess rate convergence (.e., rate \\(\\rho\\) increases \\(L\\) grows), full range library sizes small values \\(L\\) can used, \\(E = 2\\) \\(T = 100\\), setting perhaps library = c(seq(4, 25), seq(30, 50, 5), seq(54, 99, 15)). k option specifies number neighbours used prediction. set 1, nearest neighbour used, \\(k\\) increases next-closest nearest neighbours included making predictions. case \\(k\\) set 0, number neighbours used calculated automatically (typically \\(k = E + 1\\) form simplex around target), default value. \\(k = \\infty\\) (e.g., k=Inf), possible points prediction set used (.e., points library used reconstruct manifold predict target vectors). latter setting useful typically recommended S-mapping allows points library used predictions weightings theta. However, large datasets may computationally burdensome therefore k=100 perhaps k=500 may preferred \\(T\\) \\(NT\\) large. algorithm option specifies algorithm used prediction. specified, simplex projection (locally weighted average) used. Valid options include simplex smap, latter sequential locally weighted global linear mapping (S-map noted previously). case xmap subcommand two variables predict , algorithm=\"smap\" invokes something analogous distributed lag model \\(E + 1\\) predictors (including constant term \\(c\\)) , thus, \\(E + 1\\) locally-weighted coefficients predicted observation/target vectorâ€”predicted observation type regression done \\(k\\) neighbours rows \\(E + 1\\) coefficients columns. noted , case special options available save coefficients post-processing , , actually regression model instead seen manifold. p option adjusts default number observations ahead predict. parameter can negative. crossfold option asks program run cross-fold validation predicted variables. crossfold(5) indicates 5-fold cross validation. Note used together replicate. full option specified, explore command use possible observations manifold construction instead default 50/50 split. effectively leave-one-cross-validation observation used prediction. shuffle splitting observations library prediction sets, default oldest observations go library set newest observations prediction set. Though randomize option specified, data allocated two sets random fashion. replicate option specified, randomization enabled automatically. copredict option specifies variable used coprediction. second prediction run configuration \\(E\\), library, etc., using library set prediction set built lagged embedding variable. savePredictions option allows save edm predictions useful plotting diagnosis. saveCoPredictions option allows save copredictions. must specify copredict option work. saveManifolds option allows save library prediction manifolds. saveSMAPCoeffs option allows S-map coefficients stored. extras option allows incorporating additional variables embedding (multivariate embedding), e.g. extras=c(y, z). allowMissing option allows observations missing values used manifold. Vectors least one non-missing values used manifold construction. Distance computations adapted allow missing values option specified. missingDistance option allows users specify assumed distance missing values values (including missing) estimating Euclidean distance vector. enables computations missing values. option implies allowmissing. default, distance set expected distance two random draws normal distribution, equals \\(2/\\sqrt{\\pi} \\times\\) standard deviation mapping variable. dt option allows automatic inclusion timestamp differencing embedding. \\(E\\) dt variables included embedding \\(E\\) dimensions. default, weights used additional variables equal standard deviation main mapping variable divided standard deviation time difference. can overridden dtWeight option. dt option ignored running data sampling variation time lags. first dt variable embeds time recent observation time corresponding target/predictand. reldt option, read â€˜relative dtâ€™, like dt option includes \\(E\\) extra variables embedding E dimensions. However timestamp differences added time corresponding observations, time target/predictand minus time lagged observations. dtWeight option specifies weight used timestamp differencing variable. numReps number random replications (.e. random splits library prediction sets) run. akin nonparametric bootstrap without replacement, commonly used inference using confidence intervals EDM (Tsonis et al., 2015; van Nes et al., 2015; Ye et al., 2015b). panelWeight specifies penalty added distances points manifold correspond observations different panels. default panelWeight 0, data panels mixed together treatly equally. panelWeight=Inf set weight treated \\(\\infty\\) neighbours never selected cross boundaries panels. Setting panelWeight=Inf k=Inf means may use different number neighbors different predictions (.e. panels unbalanced). verbosity level detail output. numThreads number threads use prediction task. lowMemory lowMemory option tries save much space possible efficiently using memory, though small datasets likely slow computations small noticeable amount. predictWithPast Force predictions use contemporaneous data. Normally EDM happy cheat pulling segments future time series make prediction. saveInputs Save (append) inputs JSON file.  added purely (developers') ease debugging.","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/edm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"edm â€” edm","text":"list","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/edm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"edm â€” edm","text":"","code":"t <- c(1, 2, 3, 4, 5, 6, 7, 8)  x <- c(11, 12, 13, 14, 15, 16, 17, 18)  res <- edm(t, x) #>  Computing: [========================================] 100% (done)"},{"path":"https://edm-developers.github.io/fastEDM/reference/fastEDM.html","id":null,"dir":"Reference","previous_headings":"","what":"fastEDM â€” fastEDM","title":"fastEDM â€” fastEDM","text":"fastEDM package implements series tools can used empirical dynamic modeling. core algorithm written C++ achieve reasonable execution speed.","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/fastEDM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"fastEDM â€” fastEDM","text":"Jinjing Li, Michael J. Zyphur, George Sugihara, Patrick J. Laub (2021), Beyond Linearity, Stability, Equilibrium: edm Package Empirical Dynamic Modeling Convergent Cross Mapping Stata, Stata Journal, 21(1), pp. 220-258","code":""},{"path":[]},{"path":"https://edm-developers.github.io/fastEDM/reference/fastEDM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fastEDM â€” fastEDM","text":"Patrick Laub <patrick.laub@gmail.com>","code":""},{"path":"https://edm-developers.github.io/fastEDM/reference/fastEDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fastEDM â€” fastEDM","text":"","code":"library(fastEDM) library(readr)  data <- url(\"https://raw.githubusercontent.com/EDM-Developers/EDM/master/test/chicago.csv\")  chicago <- read_csv(data, col_types = cols(crime = col_double())) chicago <- head(chicago, 500) # Just to speed up the example  crimeCCMCausesTemp <- easy_edm(\"crime\", \"temp\", data=chicago, verbosity=0) #> âœ– No causal link from crime to temp found. tempCCMCausesCrime <- easy_edm(\"temp\", \"crime\", data=chicago, verbosity=0) #> âœ” Strong evidence that temp causes crime."},{"path":"https://edm-developers.github.io/fastEDM/news/index.html","id":"fastedm-01","dir":"Changelog","previous_headings":"","what":"fastEDM 0.1","title":"fastEDM 0.1","text":"Added NEWS.md file track changes package.","code":""}]
